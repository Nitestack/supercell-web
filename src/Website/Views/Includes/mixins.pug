mixin unitIcon(name, path, type)
    - const hall = village == "home" ? playerTownHall : playerBuilderHall;
    - const imagePath = `/Images/Clash of Clans/${village[0].toUpperCase() + village.slice(1)}/${path}/${name}${type == "pet" ? "_Icon" : ""}.png`;
    - const unitElement = player[(type == "troop" || type == "pet" || type == "siegeMachine" ? "troops" : (type == "hero" ? "heroes" : "spells"))].find(element => element.name.toLowerCase() == name.toLowerCase() && element.village.toLowerCase().includes(village.toLowerCase()));
    - let lvl = 0;
    - let maxLvl = 0;
    - if (unitElement) { lvl = unitElement.level; maxLvl = unitElement.maxLevel; };
    if lvl == 0
        .unit-icon.locked(style="background-image: url('" + imagePath + "');", title=`${name} Level 0 (Max for TH: ${hall[util.convertToVariableName(name)] ? hall[util.convertToVariableName(name)].maxLevel : 0})`)
    else 
        .unit-icon(style="background-image: url('" + imagePath + "');", title=`${name} Level ${lvl} (Max for TH: ${hall[util.convertToVariableName(name)].maxLevel})`)
            if lvl == 1 && ![...homeHeroesArray, "Battle Machine"].includes(name)
            else
                if lvl == maxLvl 
                    .unit-icon-level.max.coc-description(style="font-size: 17px;") #{maxLvl}
                else if hall[util.convertToVariableName(name)].maxLevel == lvl 
                    .unit-icon-level.maxTH.coc-description(style="font-size: 17px;") #{lvl}
                else 
                    .unit-icon-level.coc-description(style="font-size: 17px;") #{lvl}

mixin achievement(achievementElement)
    .achievement
        .container 
            .row
                .col-2(style="width: auto;")
                    each _, i in Array(3)
                        i.fas.fa-star(style="color: " + (achievementElement.stars >= i + 1 ? "#FFDA44" : "#C8CDD0") + "; font-size: " + (i == 1 ? "26" : "20") + "px; line-height: 40px;")
                div(style="font-weight: bold; -webkit-box-flex: 1; flex: 1 1 0%; width: 100%;")
                    h5.price-item(style="margin-bottom: 5px; line-height: 15px; font-size: 16px; font-weight: bold;") #{achievementElement.name}
                    div.no-shadow.no-edge.coc-description(style="font-size: 16px; color: black;") #{achievementElement.info}
                div(style="line-height: 40px; width: auto;")
                    if achievementElement.stars == 3
                        div.no-shadow.no-edge(align="right", style="font-size: 9.5px; color: #5E6671;") #{achievementElement.completionInfo}
                            i.fas.fa-check(style="margin-left: 20px; font-size: 30px; color: #9AD13E; line-height: 40px; float: right;")
                    else 
                        - const percentage = Math.floor(achievementElement.value / achievementElement.target * 100);
                        div(class="prg-bar" + (percentage == 0 ? "-null" : ""), style=`--width: ${percentage}` data-content=`${achievementElement.value}/${achievementElement.target}`)

mixin displayAllAchievements() 
    each item in ["Home", "Builder"]
        - const achievements = player.achievements.filter(achievement => achievement.village.toLowerCase().includes(item.toLowerCase()));
        h5.price-item(style="padding-top: 10px;") #{item} #{item.toLowerCase() == "home" ? "Village" : "Base"} Achievements
        .container 
            .row
                div(style="padding-left: 0; width: auto;")
                    - let allStars = 0;
                    - let completedAchievements = 0;
                    - for (const i of achievements) { if (i.stars == 3) completedAchievements += 1; allStars += i.stars; };
                    - const overAllPercentage = Math.floor(allStars / (achievements.length * 3) * 100);
                    div(class="prg-bar" + (overAllPercentage == 0 ? "-null" : ""), style=`--width: ${overAllPercentage}` data-content=`${completedAchievements}/${achievements.length} (${overAllPercentage}%)`)
                div(style="width: auto;")
                    i.fas.fa-star(style="color: #FFDA44; font-size: 20px; line-height: 40px;")
                    | #{allStars}/#{achievements.length * 3}
        each achievementElement in achievements
            +achievement(achievementElement)

mixin createSlider(name, min, max, imagePath)
    .slideGroup(id=name + "slideGroup")
        .container 
            .row
                .col-3
                    img.slider-image(id="photo" + name, src=imagePath)
                .col-6
                    input.slider(type="range", min=min, max=max, id=name, name=name, value=min)
                .col-3
                    input.coc-description.form-control(type="number", min=min, max=max, id="number" + name, value=min, style="font-size: 20px;")

mixin createGlobalSlider(name, max)
    .input-group.mb-3
        span.coc-description.input-group-text(style="font-size: 20px;") Set all Lv. 
        input.coc-description.form-control(id="global" + name, type="number", min=0, max=max, style="font-size: 20px;")

mixin createMultipleSlidersHome(name, imagePath)
    if playerTownHall[util.convertToVariableName(name)]
        p.lead #{name}
        +createGlobalSlider(util.convertToDatabaseName(name), playerTownHall[util.convertToVariableName(name)].maxLevel)
        - let i = 1;
        each _ in Array(playerTownHall[util.convertToVariableName(name)].amount)
            +createSlider(util.convertToDatabaseName(name) + i++, 0, playerTownHall[util.convertToVariableName(name)].maxLevel, imagePath)

mixin createMultipleSlidersBuilder(name, imagePath)
    - let maxLevel = name == "Spring Trap" ? playerBuilderHall[util.convertToVariableName(name)].maxLevel : player.builderHallLevel;
    if playerBuilderHall[util.convertToVariableName(name)]
        p.lead #{name}
        +createGlobalSlider(util.convertToDatabaseName(name), maxLevel)
        - let i = 1;
        each _ in Array(name == "Spring Trap" ? playerBuilderHall[util.convertToVariableName(name)].amount : playerBuilderHall[util.convertToVariableName(name)])
            +createSlider(util.convertToDatabaseName(name) + i++, 0, maxLevel, imagePath)

mixin createTableContent(name, path, levels, moduleName)
    - const imagePath = "/Images/Clash of Clans/" + (village == "home" ? "Home" : "Builder") + "/" + path + "/" + name;
    - const hallItem = (village == "home" ? playerTownHall : playerBuilderHall)[util.convertToVariableName(name)];
    - const maxedHallItem = (village == "home" ? maxTownHall : maxBuilderHall)[util.convertToVariableName(name)];
    - const element = (village == "home" ? home : builder).find(element => element.name == name);
    - const hallItemAmount = hallItem.amount || hallItem;
    - const hallItemMaxLevel = village == "builder" && name == "Army Camp" ? 1 : hallItem.maxLevel || player.builderHallLevel;
    tr 
        td.align-middle(rowspan=hallItemAmount + 1, style="width: 130px;")
            p.lead.item-display(align="center", style="margin: 5px;") #{name.includes("Giga") && name.includes("Giga Inferno") ? name.replace(/1/g, "").replace(/2/g, "") : name}
            if !(name == "Army Camp" && village == "builder")
                p.lead.coc-description(style="color: green; font-size: 21px;", align="center") Level #{hallItemMaxLevel}
            .center-image
                if homeHeroesArray.includes(name)
                    if ["Barbarian King", "Archer Queen"].includes(name)
                        if hallItemMaxLevel >= 41
                            img(src=imagePath + "/41.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 20
                            img(src=imagePath + "/20.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 10
                            img(src=imagePath + "/10.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 1
                            img(src=imagePath + "/1.png", style="height: 70px;")
                    else if name == "Battle Machine"
                        if (hallItemMaxLevel >= 30)
                            img(src=imagePath + "/30.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 26
                            img(src=imagePath + "/26.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 20
                            img(src=imagePath + "/20.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 10
                            img(src=imagePath + "/10.png", style="height: 70px;")
                        else if hallItemMaxLevel >= 1
                            img(src=imagePath + "/1.png", style="height: 70px;")
                    else
                        img(src=imagePath + "/" + 1 + ".png", style="height: 70px;")
                else if homePetsArray.includes(name) || homeSpellsArray.includes(name)
                    img(src=imagePath + ".png", style="height: 70px;" + (homeSpellsArray.includes(name) ? " border: #3e4251 1px solid; border-radius: 10px;" : ""))
                else if village == "builder" && name == "Army Camp"
                    img(src=imagePath + "/1.png", style="height: 70px;")
                else 
                    img(src=imagePath + "/" + hallItemMaxLevel + ".png", style="height: 70px;")
        td.align-middle(rowspan=hallItemAmount + 1)
            .container
                - const level = util.min(levels);
                if level == hallItemMaxLevel
                    if village == "builder" && name == "Army Camp"
                            p.coc-description(style="color: green; font-size: 21px;", align="center") #{player.builderHallLevel >= 8 ? "Maximum amount of buildings reached" : "Maximum amount of buildings reached for your BH level"}
                    else if (level == hallItemMaxLevel && name.includes("Giga")) || level == (maxedHallItem.maxLevel ? maxedHallItem.maxLevel : maxedBuilderHallLevel)
                        p.coc-description(style="color: green; font-size: 21px;", align="center") Maximum level reached
                    else 
                        p.coc-description(style="color: green; font-size: 21px;", align="center") Maximum level reached for your #{village == "home" ? "T" : "B"}H level!
                else 
                    - let i = 0;
                    each _ in Array((village == "builder" && name == "Army Camp" ? hallItemAmount :  hallItemMaxLevel) - level)
                        - const elementLevel = element.levels[level + i];
                        .row
                            if elementLevel.text 
                                .col
                                    div(style="color: red;", align="middle") #{elementLevel.text}
                            else
                                .col
                                    div.price-item #{village == "builder" && name == "Army Camp" ? "" : "Lv."} #{level + i + 1}#{village == "builder" && name == "Army Camp" ? "." : ""}
                                if laboratoryArray.includes(name) && elementLevel.requiredLabLevel > (parseInt(database[village == "home" ? "homeVillage" : "builderBase"][village == "home" ? "Laboratory1" : "StarLaboratory1"]) || 0)
                                    .col 
                                        div(style="color: red;", align="middle") #{village == "home" ? "" : "Star"} Level #{elementLevel.requiredLabLevel} #{village == "home" ? "" : "Star"} Laboratory Required!
                                else
                                    .col
                                        .flexible-inline
                                            div.price-item(align="right") #{name == "Builder's Hut" && level + i + 1 == 1 ? (database.homeVillage.Builder == 4 ? "2k" : (database.homeVillage.Builder == 3 ? "1k & 2k" : "500 & 1k & 2k")) : util.convertNumber(elementLevel.calculateSeasonBoostCosts(database[(laboratoryArray.includes(name) || homePetsArray.includes(name) ? "research" : "builder") + "SeasonBoost"]))}
                                            if elementLevel.costType == "builderGoldAndElixir" || elementLevel.costType == "goldAndElixir"
                                                img(src="/Images/Clash of Clans/Home/Gold and Elixir.png", style="height: 20px;")
                                            else 
                                                img(src="/Images/Clash of Clans/" + village[0].toUpperCase() + village.slice(1) + "/" + (elementLevel.costType[0].toUpperCase() + elementLevel.costType.slice(1)).replace(/([A-Z]+)/g, ' $1').trim() + ".png", style="height: 20px;")
                                    .col
                                        div.price-item(align="right") #{convertTime(elementLevel.calculateSeasonBoostTimeInSeconds(database[(laboratoryArray.includes(name) || homePetsArray.includes(name) ? "research" : "builder") + "SeasonBoost"]))}
                        - i++;
    each lvl, index in levels
        - const building = database[village == "home" ? "homeVillageBuilder" : "builderBaseBuilder"].find(building => building.name.toLowerCase() == name.toLowerCase() && building.id == index + 1);
        - const lab = database[(village + "Lab")].find(unit => unit.name.toLowerCase() == name.toLowerCase());
        - const otto = database.otto.builder.find(building => building.name.toLowerCase() == name.toLowerCase() && building.id == index + 1);
        - const builder = building || lab || otto ? building || lab || otto : false;
        tr 
            td.align-middle
                .container 
                    .row
                        .col-2
                            if homeHeroesArray.includes(name)
                                if ["Barbarian King", "Archer Queen"].includes(name)
                                    if lvl == 0
                                        img(src=imagePath + "/0.png", style="height: 30px;")
                                    else if lvl >= 41
                                        img(src=imagePath + "/41.png", style="height: 30px;")
                                    else if lvl >= 20
                                        img(src=imagePath + "/20.png", style="height: 30px;")
                                    else if lvl >= 10
                                        img(src=imagePath + "/10.png", style="height: 30px;")
                                    else if lvl >= 1
                                        img(src=imagePath + "/1.png", style="height: 30px;")
                                else
                                    if lvl == 0
                                        img(src=imagePath + "/0.png", style="height: 30px;")
                                    else 
                                        img(src=imagePath + "/1.png", style="height: 30px;")
                            else if homePetsArray.includes(name) || homeSpellsArray.includes(name)
                                img(src=imagePath + ".png", style="height: 30px;" + (homeSpellsArray.includes(name) ? " border: #3e4251 1px solid; border-radius: 5px;" : ""))
                            else
                                img(src=imagePath + "/" + lvl + ".png", style="height: 30px;")
                        if builder
                            - function numberToOrdinal(number) { switch (parseInt(number.toString().charAt(number.toString().length - 1))) { case 1: return number.toString().replace(/.$/, "1st"); case 2: return number.toString().replace(/.$/, "2nd"); case 3: return number.toString().replace(/.$/, "3rd"); default: return number.toString().replace(/.$/, `${number.toString().charAt(number.toString().length - 1)}th`); }; };
                            - function getDay(number) { const dayArray = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]; return dayArray[number]; };
                            - function getMonth(number) { const monthArray = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]; return monthArray[number]; };
                            - const finishDate = new Date(builder.start.getTime() + builder.durationInMilliseconds);
                            - const remainingTime = finishDate.getTime() - Date.now();
                            - const convertedRemainingTime = convertTime(remainingTime / 1000);
                            - const percentage = 100 - Math.ceil(remainingTime / builder.durationInMilliseconds * 100);
                            .col 
                                .row
                                    .col
                                        div(id=util.convertToDatabaseName(builder.name) + builder._id, title=`Finished: ${getDay(finishDate.getDay())} ${numberToOrdinal(finishDate.getDate())} ${getMonth(finishDate.getMonth())} ${finishDate.getFullYear()} @ ${finishDate.getHours()}:${finishDate.getMinutes()}`, class="prg-bar" + (percentage == 0 ? "-null" : ""), style=`--width: ${percentage};` data-content=`${util.shortener(convertedRemainingTime)} (${percentage}%)`)
                                .row 
                                    .col
                                        div(style="color: white;")
                                            i.fas.fa-arrow-right(style="color: white;") 
                                            | #{builder.currentLevel + 1}
                                    .col
                                        .flexible-inline
                                            div.price-item(id="gemCount" + util.convertToDatabaseName(builder.name) + builder._id) #{util.timeToGems(remainingTime / 1000)}
                                            img(src="/Images/Clash of Clans/Home/Gem.png", style="height: 20px;")
                            .col
                                button.btn.btn-warning.editUpgrade(type="button", data-id=util.convertToDatabaseName(builder.name) + builder._id) #[i.fas.fa-tools]
                                button.btn.btn-success.finishUpgrade(type="button", data-name=builder.name, data-id=builder.id, data-tag=player.tag) #[i.fas.fa-check]
                        else
                            if !(village == "builder" && name == "Army Camp")
                            .col(style="text-align: center;")
                                div.price-item Lv. #{lvl}
                            .col(style="text-align: center;")
                                if lvl == hallItemMaxLevel
                                    button.btn.btn-success(disabled) #[i.fas.fa-check]
                                else if laboratoryArray.includes(name)
                                    if lvl == 0 || element.levels[lvl - 1].requiredLabLevel > (parseInt(database[village == "home" ? "homeVillage" : "builderBase"][village == "home" ? "Laboratory1" : "StarLaboratory1"]) || 0)
                                        button.btn.btn-danger(disabled) #[i.fas.fa-lock]
                                    else 
                                        button.btn.lab-button(data-module=moduleName, data-id=name, onclick=`startLaboratoryUpgrade("${name}", "${lvl}", "${player.tag}");`)
                                else
                                    button.btn.builder-button(data-module=moduleName, data-id=util.convertToDatabaseName(name) + (index + 1), onclick=`startBuilderUpgrade("${util.convertToDatabaseName(name) + (index + 1)}", "${name}", ${index + 1}, ${lvl}, "${player.tag}", ${homeHeroesArray.includes(name) || name == "Battle Machine" ? true : false});`)